// A dispatcher where on can subscribe to events and trigger them
// A map where all subscriptions and subscrier will be stored
let map = {};

function subscribe(event, callback) {
    if (!map[event]) {
        map[event] = [];
    }
    map[event].push(callback);
}

function unsubscribe(event, callback) {
    if (map[event]) {
        map[event] = map[event].filter(function(subscriber) {
            return subscriber !== callback;
        });
    }
}
function dispatch(event, data) {
    if (map[event]) {
        map[event].forEach(function(callback) {
            callback(data);
        });
    }
}

// Usage
    // subscribe('event', function(data) {
    //     console.log(data);
    // });
    // dispatch('event', 'Hello, world!'); // Hello, world!
    // unsubscribe('event');
    // dispatch('event', 'Hello, world!'); // (no output)

// Path: server.js

module.exports = {
    subscribe,
    unsubscribe,
    dispatch
};